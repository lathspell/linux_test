version: '3.1'
services:

  traefik:
    image: traefik:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"

  httpbin:
    image: "kennethreitz/httpbin"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.httpbin.rule=Host(`httpbin.localhost`)"
      - "traefik.http.routers.httpbin.entrypoints=web"
      - "traefik.http.services.httpbin.loadbalancer.server.port=80"

  whoami:
    image: "traefik/whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=web" # which external port to use (see --entrypoints.web.address above)
      - "traefik.http.services.whoami.loadbalancer.server.port=80" # in case the service opens more than one port
      - "traefik.http.routers.whoami.middlewares=my-cors" # middlewares have global names but can be defined anywhere
      - "traefik.http.middlewares.my-cors.headers.customResponseHeaders.Access-Control-Allow-Origin=http://localhost"
      - "traefik.http.middlewares.my-cors.headers.customResponseHeaders.Access-Control-Allow-Methods=GET"
      - "traefik.http.middlewares.my-cors.headers.customResponseHeaders.Access-Control-Allow-Credentials=true"
      - "traefik.http.middlewares.my-cors.headers.customResponseHeaders.Access-Control-Max-Age=100"
      - "traefik.http.middlewares.my-cors.headers.customResponseHeaders.Vary=Origin"
